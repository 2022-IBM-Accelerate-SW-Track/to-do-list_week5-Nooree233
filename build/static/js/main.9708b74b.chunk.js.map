{"version":3,"sources":["assets/profile_pic.jpg","pages/About.js","component/todos.js","component/AddTodo.js","pages/Home.js","component/SearchTodo.js","component/TodoData.js","pages/TodoPage.js","component/navigation/NavbarComp.js","App.js","index.js"],"names":["About","class","className","src","profile_pic","alt","Component","Todos","todos","deleteTodo","todoList","length","map","todo","color","Date","duedate","console","log","Grid","Card","content","style","marginTop","background","ListItemButton","component","href","Checkbox","paddingLeft","onClick","id","ListItemText","primary","secondary","padding","AddTodo","handleChange","event","setState","target","value","date","toLocaleString","handleDateChange","toLocaleDateString","handleSubmit","preventDefault","state","trim","props","addTodo","TextField","label","variant","onChange","this","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","renderInput","params","Button","marginLeft","Home","filter","find","t","Math","random","jsonObject","task","currentDate","dueDate","Axios","method","url","data","headers","then","res","message","new_list","SearchTodo","tmpdata","e","taskname","JSON","stringify","onSubmit","name","ShowTodos","useState","setTodos","useEffect","get","fetchData","TodoPage","NavbarComp","Navbar","bg","expand","Container","Toggle","Collapse","Nav","Link","as","to","exact","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9708b74b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile_pic.536fd505.jpg\";","import React, { Component } from \"react\";\r\nimport \"./About.css\";\r\nimport profile_pic from \"../assets/profile_pic.jpg\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <p>Design your About me page </p> */}\r\n        <div class=\"split left\">\r\n          <div className=\"centered\">\r\n            <img\r\n              className=\"profile_image\"\r\n              src={profile_pic}\r\n              alt=\"Profile Pic\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n        <div className=\"split right\">\r\n          <div className=\"centered\">\r\n            <div className=\"name_title\">Your Name</div>\r\n            <div className=\"brief_description\">\r\n              Tell us about yourself in a few sentences. Tell us your interests\r\n              and say a fun fact about yourself.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../component/todos.css\";\r\nimport { Card, Grid, ListItemButton, ListItemText, Checkbox} from \"@mui/material\";\r\n\r\n// 1. This component formats and returns the list of todos.\r\n// 2. Treat the question mark like an if statement.\r\n// If the todos array has items in the list [todos.length], we want to return the list\r\n// Else, return a message saying \"You have no todo's left\"\r\n// 3. The map function is called to assign each array item with a key\r\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\r\n// a key, and it's own card shown in the UI\r\nconst Todos = ({ todos, deleteTodo }) => {\r\n  const todoList = todos.length ? (\r\n    todos.map((todo) => {\r\n      let color = \"#ffffffff\"\r\n      if (new Date(todo.duedate) < new Date()){\r\n        color = 'red'\r\n      }\r\n      console.log(color)\r\n      return (\r\n        <Grid key={todo.id}>\r\n          <Card data-testid={todo.content} style={{marginTop:10, background: color}}>\r\n            {/* Remember, we set the local state of this todo item when the user submits the form in \r\n            AddTodo.js. All we need to do is return the todo list item {todo.content} as well as its \r\n            current date/time {todo.date}. Also, the item's id is utilized in order to correctly delete an item from the Todo list*/}\r\n            <ListItemButton component=\"a\" href=\"#simple-list\">\r\n              <Checkbox style={{paddingLeft:0}} color=\"primary\" onClick={() => deleteTodo(todo.id)}/>\r\n              <ListItemText primary={todo.content} secondary={todo.duedate}/>\r\n            </ListItemButton>\r\n          </Card>\r\n        </Grid>\r\n      );\r\n    })\r\n  ) : (\r\n    <p>You have no todo's left </p>\r\n  );\r\n  // Lastly, return the todoList constant that we created above to show all of the items on the screen.\r\n  return (\r\n    <div className=\"todoCollection\" style={{ padding: \"10px\" }}>\r\n      {todoList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { DesktopDatePicker , LocalizationProvider} from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\n\r\nclass AddTodo extends Component {\r\n  // Create a local react state of the this component with both content date property set to nothing.\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      content: \"\",\r\n      date: \"\",\r\n      duedate: null\r\n    };\r\n  }\r\n  // The handleChange function updates the react state with the new input value provided from the user and the current date/time.\r\n  // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\r\n  // into the text field.\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      content: event.target.value,\r\n      date: Date().toLocaleString('en-US')\r\n    });\r\n  };\r\n\r\n  handleDateChange = (event) => {\r\n    let date = null\r\n    if(event != null){\r\n      date = new Date(event).toLocaleDateString()\r\n    }\r\n    this.setState({\r\n      duedate: date\r\n    });\r\n  };\r\n  // The handleSubmit function collects the forms input and puts it into the react state.\r\n  // event.preventDefault() is called to prevents default event behavior like refreshing the browser.\r\n  // this.props.addTodo(this.state) passes the current state (or user input and current date/time) into the addTodo function defined\r\n  // in the Home.js file which then adds the input into the list.\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.content.trim()) {\r\n      this.props.addTodo(this.state);\r\n      this.setState({\r\n        content: \"\",\r\n        date: \"\",\r\n        duedate: null\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      // 1. When rendering a component, you can render as many elements as you like as long as it is wrapped inside\r\n      // one div element.\r\n      // 2. The return statement should include a text field input with the handleChange function from above that\r\n      // is passed into an onChange event.\r\n      // 3. The return should also include a button with the handleSubmit function from above that is passed into\r\n      // an OnClick event.\r\n      // 4. The value of the text field also should reflect the local state of this component.\r\n      <div>\r\n        <TextField\r\n          label=\"Add New Item\"\r\n          variant=\"outlined\"\r\n          onChange={this.handleChange}\r\n          value={this.state.content}\r\n        />\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>         \r\n          <DesktopDatePicker\r\n              id=\"new-item-date\"\r\n              label=\"Due Date\"\r\n              value={this.state.duedate}\r\n              onChange={this.handleDateChange}\r\n              renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </LocalizationProvider>\r\n        <Button\r\n          style={{ marginLeft: \"10px\" }}\r\n          onClick={this.handleSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from \"react\";\r\nimport Todos from \"../component/todos\";\r\nimport AddTodo from \"../component/AddTodo\";\r\nimport \"../pages/Home.css\";\r\nimport Axios from \"axios\";\r\n\r\nclass Home extends Component {\r\n  // Create a default state of this component with an empty list of todos.\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: [],\r\n    };\r\n  }\r\n\r\n  // the deleteTodo function simply creates a new array that removes the todo item selected from the user from the list\r\n  // and then updates the state with the new list.\r\n  deleteTodo = (id) => {\r\n    // Within this function, the item's id is being utilized in order to filter it out from the todo list\r\n    // and then updates the state with a new list\r\n    const todos = this.state.todos.filter((todo) => {\r\n      return todo.id !== id;\r\n    });\r\n    this.setState({\r\n      todos: todos,\r\n    });\r\n  };\r\n\r\n  // the addTodo function simply creates a new array that includes the user submitted todo item and then\r\n  // updates the state with the new list.\r\n  addTodo = (todo) => {\r\n    const exists = this.state.todos.find(t => t.content === todo.content);\r\n    if (exists || todo.duedate == null || todo.duedate === \"Invalid Date\"){ return }\r\n    // In React, keys or ids in a list help identify which items have changed, been added or removed. Keys\r\n    // should not share duplicate values.\r\n    // To avoid having dup values, we use the Math.random() function to generate a random value for a todo id.\r\n    // This solution works for a small application but a more complex hashing function should be used when\r\n    // dealing with a larger data sensitive project.\r\n    todo.id = Math.random();\r\n\r\n     // Send Task Item to database as a json object upon submission\r\n     const jsonObject = {\r\n      id: todo.id,\r\n      task: todo.content,\r\n      currentDate: todo.date,\r\n      dueDate: todo.duedate\r\n    };\r\n\r\n    Axios({\r\n      method: \"POST\",\r\n      url: \"http://localhost:8080/add/item\",\r\n      data: {jsonObject},\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then(res => {\r\n        console.log(res.data.message);\r\n    });\r\n\r\n    // Create a array that contains the current array and the new todo item\r\n    let new_list = [...this.state.todos, todo];\r\n    // Update the local state with the new array.\r\n    this.setState({\r\n      todos: new_list,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <h1>Todo's </h1>\r\n        {/* When passing the AddTodo component, addTodo is a prop that is used in the \r\n        AddTodo.js file when handling the submit */}\r\n        <AddTodo addTodo={this.addTodo} />\r\n        {/* When returning the Todos component, todos is a prop passed to the todos.js file\r\n         to format and render the current todo list state */}\r\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport Axios from \"axios\";\r\n\r\nclass SearchTodo extends Component {\r\n  \r\n  state = {\r\n    tmpdata: [],\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n      date: Date().toLocaleString('en-US'),\r\n    });\r\n  };\r\n  \r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // HTTP Client to send a GET request\r\n    Axios({\r\n      method: \"GET\",\r\n      url: \"http://localhost:8080/get/searchitem\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      params: {\r\n        taskname: this.state.content\r\n      }\r\n    }).then(res => {\r\n      this.setState({\r\n        tmpdata: JSON.stringify(res.data),\r\n      });\r\n\r\n    });\r\n    \r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id=\"search-item-input\"\r\n            label=\"Search for ToDo Item\"\r\n            variant=\"outlined\"\r\n            onChange={this.handleChange}\r\n            value={this.state.value}\r\n          /> \r\n          <Button\r\n            id=\"search-item-button\"\r\n            name='submit'\r\n            style={{ marginLeft: \"10px\",marginTop:10 }}\r\n            onClick={this.handleSubmit}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Search\r\n          </Button>\r\n        </form>\r\n        <div>{this.state.tmpdata}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchTodo;\r\n","import React, {  useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst ShowTodos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await Axios.get('http://localhost:8080/get/items');\r\n        setTodos(JSON.stringify(res.data));\r\n        console.log(JSON.stringify(res.data));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return <div>{todos}</div>\r\n  \r\n}\r\nexport default ShowTodos;\r\n","import React, {  Component } from \"react\";\r\nimport SearchTodo from \"../component/SearchTodo\";\r\nimport \"../pages/TodoPage.css\";\r\nimport ShowTodos from \"../component/TodoData\";\r\n\r\nexport default class TodoPage extends Component {\r\n\r\n     render() { \r\n      return (\r\n        <div className=\"Todo List\">\r\n          <h1>Todo List </h1>\r\n          <div><ShowTodos/><br></br></div>\r\n          <div><SearchTodo/></div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\n  \r\n\r\n","import React, { Component } from \"react\";\r\nimport {Navbar, Nav, Container} from 'react-bootstrap'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route, \r\n    Link\r\n} from \"react-router-dom\"\r\nimport About from \"../../pages/About\";\r\nimport Home from \"../../pages/Home\";\r\nimport TodoPage from \"../../pages/TodoPage\";\r\n\r\nexport default class NavbarComp extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n            <div>\r\n            <Navbar bg=\"dark\" variant={\"dark\"} expand=\"lg\">\r\n                <Container>\r\n                    {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to={\"/\"}> Home </Nav.Link>\r\n                        <Nav.Link as={Link} to={\"/about\"}>About</Nav.Link>\r\n                        <Nav.Link as={Link} to={\"/TodoPage\"}>TodoPage</Nav.Link>\r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            </div>\r\n            <div>\r\n                <Routes>\r\n                <Route exact path=\"/\" element={<Home/>}/>\r\n                <Route exact path=\"/about\" element={<About/>}/>\r\n                <Route exact path=\"/TodoPage\" element={<TodoPage/>}/>\r\n                </Routes>\r\n            </div>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport NavbarComp from './component/navigation/NavbarComp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavbarComp/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}